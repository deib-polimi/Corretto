/*
 * generated by Xtext
 */
grammar InternalProperty;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.correttouml.grammars.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.correttouml.grammars.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.correttouml.grammars.services.PropertyGrammarAccess;

}

@parser::members {
 
 	private PropertyGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(PropertyGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCorretto
entryRuleCorretto 
:
{ before(grammarAccess.getCorrettoRule()); }
	 ruleCorretto
{ after(grammarAccess.getCorrettoRule()); } 
	 EOF 
;

// Rule Corretto
ruleCorretto
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCorrettoAccess().getGroup()); }
(rule__Corretto__Group__0)
{ after(grammarAccess.getCorrettoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVerify
entryRuleVerify 
:
{ before(grammarAccess.getVerifyRule()); }
	 ruleVerify
{ after(grammarAccess.getVerifyRule()); } 
	 EOF 
;

// Rule Verify
ruleVerify
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVerifyAccess().getGroup()); }
(rule__Verify__Group__0)
{ after(grammarAccess.getVerifyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaration
entryRuleDeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
(rule__Declaration__Alternatives)
{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTRIO
entryRuleTRIO 
:
{ before(grammarAccess.getTRIORule()); }
	 ruleTRIO
{ after(grammarAccess.getTRIORule()); } 
	 EOF 
;

// Rule TRIO
ruleTRIO
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTRIOAccess().getGroup()); }
(rule__TRIO__Group__0)
{ after(grammarAccess.getTRIOAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTRIOL
entryRuleTRIOL 
:
{ before(grammarAccess.getTRIOLRule()); }
	 ruleTRIOL
{ after(grammarAccess.getTRIOLRule()); } 
	 EOF 
;

// Rule TRIOL
ruleTRIOL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTRIOLAccess().getAlternatives()); }
(rule__TRIOL__Alternatives)
{ after(grammarAccess.getTRIOLAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTRIOR
entryRuleTRIOR 
:
{ before(grammarAccess.getTRIORRule()); }
	 ruleTRIOR
{ after(grammarAccess.getTRIORRule()); } 
	 EOF 
;

// Rule TRIOR
ruleTRIOR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTRIORAccess().getGroup()); }
(rule__TRIOR__Group__0)
{ after(grammarAccess.getTRIORAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArithBool
entryRuleArithBool 
:
{ before(grammarAccess.getArithBoolRule()); }
	 ruleArithBool
{ after(grammarAccess.getArithBoolRule()); } 
	 EOF 
;

// Rule ArithBool
ruleArithBool
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArithBoolAccess().getGroup()); }
(rule__ArithBool__Group__0)
{ after(grammarAccess.getArithBoolAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArithTerm
entryRuleArithTerm 
:
{ before(grammarAccess.getArithTermRule()); }
	 ruleArithTerm
{ after(grammarAccess.getArithTermRule()); } 
	 EOF 
;

// Rule ArithTerm
ruleArithTerm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArithTermAccess().getGroup()); }
(rule__ArithTerm__Group__0)
{ after(grammarAccess.getArithTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArithTermL
entryRuleArithTermL 
:
{ before(grammarAccess.getArithTermLRule()); }
	 ruleArithTermL
{ after(grammarAccess.getArithTermLRule()); } 
	 EOF 
;

// Rule ArithTermL
ruleArithTermL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArithTermLAccess().getAlternatives()); }
(rule__ArithTermL__Alternatives)
{ after(grammarAccess.getArithTermLAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArithTermR
entryRuleArithTermR 
:
{ before(grammarAccess.getArithTermRRule()); }
	 ruleArithTermR
{ after(grammarAccess.getArithTermRRule()); } 
	 EOF 
;

// Rule ArithTermR
ruleArithTermR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArithTermRAccess().getGroup()); }
(rule__ArithTermR__Group__0)
{ after(grammarAccess.getArithTermRAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArithVar
entryRuleArithVar 
:
{ before(grammarAccess.getArithVarRule()); }
	 ruleArithVar
{ after(grammarAccess.getArithVarRule()); } 
	 EOF 
;

// Rule ArithVar
ruleArithVar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArithVarAccess().getAlternatives()); }
(rule__ArithVar__Alternatives)
{ after(grammarAccess.getArithVarAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataType
entryRuleDataType 
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeAccess().getGroup()); }
(rule__DataType__Group__0)
{ after(grammarAccess.getDataTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Corretto__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCorrettoAccess().getVerifyAssignment_1_0()); }
(rule__Corretto__VerifyAssignment_1_0)
{ after(grammarAccess.getCorrettoAccess().getVerifyAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getCorrettoAccess().getExecuteAssignment_1_1()); }
(rule__Corretto__ExecuteAssignment_1_1)
{ after(grammarAccess.getCorrettoAccess().getExecuteAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getGroup_0()); }
(rule__Declaration__Group_0__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getGroup_1()); }
(rule__Declaration__Group_1__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getTrioAssignment_1_2_0()); }
(rule__Declaration__TrioAssignment_1_2_0)
{ after(grammarAccess.getDeclarationAccess().getTrioAssignment_1_2_0()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getGroup_1_2_1()); }
(rule__Declaration__Group_1_2_1__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getGroup_0()); }
(rule__TRIOL__Group_0__0)
{ after(grammarAccess.getTRIOLAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTRIOLAccess().getArithBoolAssignment_1()); }
(rule__TRIOL__ArithBoolAssignment_1)
{ after(grammarAccess.getTRIOLAccess().getArithBoolAssignment_1()); }
)

    |(
{ before(grammarAccess.getTRIOLAccess().getGroup_2()); }
(rule__TRIOL__Group_2__0)
{ after(grammarAccess.getTRIOLAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTRIOLAccess().getGroup_3()); }
(rule__TRIOL__Group_3__0)
{ after(grammarAccess.getTRIOLAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getTRIOLAccess().getGroup_4()); }
(rule__TRIOL__Group_4__0)
{ after(grammarAccess.getTRIOLAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getTRIOLAccess().getGroup_5()); }
(rule__TRIOL__Group_5__0)
{ after(grammarAccess.getTRIOLAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getGroup_0()); }
(rule__ArithTermL__Group_0__0)
{ after(grammarAccess.getArithTermLAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getArithTermLAccess().getConstantAssignment_1()); }
(rule__ArithTermL__ConstantAssignment_1)
{ after(grammarAccess.getArithTermLAccess().getConstantAssignment_1()); }
)

    |(
{ before(grammarAccess.getArithTermLAccess().getArithVarAssignment_2()); }
(rule__ArithTermL__ArithVarAssignment_2)
{ after(grammarAccess.getArithTermLAccess().getArithVarAssignment_2()); }
)

    |(
{ before(grammarAccess.getArithTermLAccess().getGroup_3()); }
(rule__ArithTermL__Group_3__0)
{ after(grammarAccess.getArithTermLAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getArithTermLAccess().getGroup_4()); }
(rule__ArithTermL__Group_4__0)
{ after(grammarAccess.getArithTermLAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithVar__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithVarAccess().getGroup_0()); }
(rule__ArithVar__Group_0__0)
{ after(grammarAccess.getArithVarAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getArithVarAccess().getGroup_1()); }
(rule__ArithVar__Group_1__0)
{ after(grammarAccess.getArithVarAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getArithVarAccess().getGroup_2()); }
(rule__ArithVar__Group_2__0)
{ after(grammarAccess.getArithVarAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDeclarationsAssignment_0()); }
(rule__Model__DeclarationsAssignment_0)*
{ after(grammarAccess.getModelAccess().getDeclarationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getCorrettoCommandAssignment_1()); }
(rule__Model__CorrettoCommandAssignment_1)
{ after(grammarAccess.getModelAccess().getCorrettoCommandAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Corretto__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Corretto__Group__0__Impl
	rule__Corretto__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Corretto__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCorrettoAccess().getCorrettoKeyword_0()); }

	'Corretto.' 

{ after(grammarAccess.getCorrettoAccess().getCorrettoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Corretto__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Corretto__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Corretto__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCorrettoAccess().getAlternatives_1()); }
(rule__Corretto__Alternatives_1)
{ after(grammarAccess.getCorrettoAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Verify__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Verify__Group__0__Impl
	rule__Verify__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerifyAccess().getVerifyKeyword_0()); }

	'verify(' 

{ after(grammarAccess.getVerifyAccess().getVerifyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Verify__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Verify__Group__1__Impl
	rule__Verify__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerifyAccess().getTrioAssignment_1()); }
(rule__Verify__TrioAssignment_1)
{ after(grammarAccess.getVerifyAccess().getTrioAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Verify__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Verify__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerifyAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getVerifyAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Declaration__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_0__0__Impl
	rule__Declaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getStateNameAssignment_0_0()); }
(rule__Declaration__StateNameAssignment_0_0)
{ after(grammarAccess.getDeclarationAccess().getStateNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_0__1__Impl
	rule__Declaration__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getEqualsSignKeyword_0_1()); }

	'=' 

{ after(grammarAccess.getDeclarationAccess().getEqualsSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_0__2__Impl
	rule__Declaration__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getObjAssignment_0_2()); }
(rule__Declaration__ObjAssignment_0_2)
{ after(grammarAccess.getDeclarationAccess().getObjAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_0__3__Impl
	rule__Declaration__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getGetStateKeyword_0_3()); }

	'.getState(' 

{ after(grammarAccess.getDeclarationAccess().getGetStateKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_0__4__Impl
	rule__Declaration__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getStdAssignment_0_4()); }
(rule__Declaration__StdAssignment_0_4)
{ after(grammarAccess.getDeclarationAccess().getStdAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_0__5__Impl
	rule__Declaration__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getCommaKeyword_0_5()); }

	',' 

{ after(grammarAccess.getDeclarationAccess().getCommaKeyword_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_0__6__Impl
	rule__Declaration__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getUMLStateNameAssignment_0_6()); }
(rule__Declaration__UMLStateNameAssignment_0_6)
{ after(grammarAccess.getDeclarationAccess().getUMLStateNameAssignment_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_0__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_0__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getRightParenthesisKeyword_0_7()); }

	')' 

{ after(grammarAccess.getDeclarationAccess().getRightParenthesisKeyword_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Declaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1__0__Impl
	rule__Declaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getTrioVarAssignment_1_0()); }
(rule__Declaration__TrioVarAssignment_1_0)
{ after(grammarAccess.getDeclarationAccess().getTrioVarAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1__1__Impl
	rule__Declaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getEqualsSignKeyword_1_1()); }

	'=' 

{ after(grammarAccess.getDeclarationAccess().getEqualsSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getAlternatives_1_2()); }
(rule__Declaration__Alternatives_1_2)
{ after(grammarAccess.getDeclarationAccess().getAlternatives_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Declaration__Group_1_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1_2_1__0__Impl
	rule__Declaration__Group_1_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getObjAssignment_1_2_1_0()); }
(rule__Declaration__ObjAssignment_1_2_1_0)
{ after(grammarAccess.getDeclarationAccess().getObjAssignment_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1_2_1__1__Impl
	rule__Declaration__Group_1_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getInKeyword_1_2_1_1()); }

	'.in(' 

{ after(grammarAccess.getDeclarationAccess().getInKeyword_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1_2_1__2__Impl
	rule__Declaration__Group_1_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getStateNameAssignment_1_2_1_2()); }
(rule__Declaration__StateNameAssignment_1_2_1_2)
{ after(grammarAccess.getDeclarationAccess().getStateNameAssignment_1_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1_2_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1_2_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1_2_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getRightParenthesisKeyword_1_2_1_3()); }

	')' 

{ after(grammarAccess.getDeclarationAccess().getRightParenthesisKeyword_1_2_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TRIO__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIO__Group__0__Impl
	rule__TRIO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIO__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOAccess().getTrioLAssignment_0()); }
(rule__TRIO__TrioLAssignment_0)
{ after(grammarAccess.getTRIOAccess().getTrioLAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIO__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIO__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIO__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOAccess().getTrioRAssignment_1()); }
(rule__TRIO__TrioRAssignment_1)?
{ after(grammarAccess.getTRIOAccess().getTrioRAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TRIOL__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_0__0__Impl
	rule__TRIOL__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTrioVarAssignment_0_0()); }
(rule__TRIOL__TrioVarAssignment_0_0)
{ after(grammarAccess.getTRIOLAccess().getTrioVarAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOL__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getGroup_0_1()); }
(rule__TRIOL__Group_0_1__0)?
{ after(grammarAccess.getTRIOLAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TRIOL__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_0_1__0__Impl
	rule__TRIOL__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getOpNameAssignment_0_1_0()); }
(rule__TRIOL__OpNameAssignment_0_1_0)
{ after(grammarAccess.getTRIOLAccess().getOpNameAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOL__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getLeftParenthesisRightParenthesisKeyword_0_1_1()); }

	'()' 

{ after(grammarAccess.getTRIOLAccess().getLeftParenthesisRightParenthesisKeyword_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TRIOL__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_2__0__Impl
	rule__TRIOL__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getExclamationMarkLeftParenthesisKeyword_2_0()); }

	'!(' 

{ after(grammarAccess.getTRIOLAccess().getExclamationMarkLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOL__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_2__1__Impl
	rule__TRIOL__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTrioNotAssignment_2_1()); }
(rule__TRIOL__TrioNotAssignment_2_1)
{ after(grammarAccess.getTRIOLAccess().getTrioNotAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOL__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getTRIOLAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TRIOL__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_3__0__Impl
	rule__TRIOL__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTimeKeyword_3_0()); }

	'Time.' 

{ after(grammarAccess.getTRIOLAccess().getTimeKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOL__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_3__1__Impl
	rule__TRIOL__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTrioOpFAssignment_3_1()); }
(rule__TRIOL__TrioOpFAssignment_3_1)
{ after(grammarAccess.getTRIOLAccess().getTrioOpFAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOL__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_3__2__Impl
	rule__TRIOL__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getLeftParenthesisKeyword_3_2()); }

	'(' 

{ after(grammarAccess.getTRIOLAccess().getLeftParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOL__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_3__3__Impl
	rule__TRIOL__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTrioOpF1Assignment_3_3()); }
(rule__TRIOL__TrioOpF1Assignment_3_3)
{ after(grammarAccess.getTRIOLAccess().getTrioOpF1Assignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOL__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getRightParenthesisKeyword_3_4()); }

	')' 

{ after(grammarAccess.getTRIOLAccess().getRightParenthesisKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TRIOL__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_4__0__Impl
	rule__TRIOL__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTimeKeyword_4_0()); }

	'Time.' 

{ after(grammarAccess.getTRIOLAccess().getTimeKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOL__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_4__1__Impl
	rule__TRIOL__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTrioOpFFAssignment_4_1()); }
(rule__TRIOL__TrioOpFFAssignment_4_1)
{ after(grammarAccess.getTRIOLAccess().getTrioOpFFAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOL__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_4__2__Impl
	rule__TRIOL__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getLeftParenthesisKeyword_4_2()); }

	'(' 

{ after(grammarAccess.getTRIOLAccess().getLeftParenthesisKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOL__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_4__3__Impl
	rule__TRIOL__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTrioOpFF1Assignment_4_3()); }
(rule__TRIOL__TrioOpFF1Assignment_4_3)
{ after(grammarAccess.getTRIOLAccess().getTrioOpFF1Assignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOL__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_4__4__Impl
	rule__TRIOL__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getCommaKeyword_4_4()); }

	',' 

{ after(grammarAccess.getTRIOLAccess().getCommaKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOL__Group_4__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_4__5__Impl
	rule__TRIOL__Group_4__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_4__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTrioOpFF2Assignment_4_5()); }
(rule__TRIOL__TrioOpFF2Assignment_4_5)
{ after(grammarAccess.getTRIOLAccess().getTrioOpFF2Assignment_4_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOL__Group_4__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_4__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_4__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getRightParenthesisKeyword_4_6()); }

	')' 

{ after(grammarAccess.getTRIOLAccess().getRightParenthesisKeyword_4_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TRIOL__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_5__0__Impl
	rule__TRIOL__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTimeKeyword_5_0()); }

	'Time.' 

{ after(grammarAccess.getTRIOLAccess().getTimeKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOL__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_5__1__Impl
	rule__TRIOL__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTrioOpFNAssignment_5_1()); }
(rule__TRIOL__TrioOpFNAssignment_5_1)
{ after(grammarAccess.getTRIOLAccess().getTrioOpFNAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOL__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_5__2__Impl
	rule__TRIOL__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getLeftParenthesisKeyword_5_2()); }

	'(' 

{ after(grammarAccess.getTRIOLAccess().getLeftParenthesisKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOL__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_5__3__Impl
	rule__TRIOL__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTrioOpFN1Assignment_5_3()); }
(rule__TRIOL__TrioOpFN1Assignment_5_3)
{ after(grammarAccess.getTRIOLAccess().getTrioOpFN1Assignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOL__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_5__4__Impl
	rule__TRIOL__Group_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getCommaKeyword_5_4()); }

	',' 

{ after(grammarAccess.getTRIOLAccess().getCommaKeyword_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOL__Group_5__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_5__5__Impl
	rule__TRIOL__Group_5__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_5__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getIntAssignment_5_5()); }
(rule__TRIOL__IntAssignment_5_5)
{ after(grammarAccess.getTRIOLAccess().getIntAssignment_5_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOL__Group_5__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOL__Group_5__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__Group_5__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getRightParenthesisKeyword_5_6()); }

	')' 

{ after(grammarAccess.getTRIOLAccess().getRightParenthesisKeyword_5_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TRIOR__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOR__Group__0__Impl
	rule__TRIOR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOR__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIORAccess().getTrioOP2Assignment_0()); }
(rule__TRIOR__TrioOP2Assignment_0)
{ after(grammarAccess.getTRIORAccess().getTrioOP2Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TRIOR__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TRIOR__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOR__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIORAccess().getTrioAssignment_1()); }
(rule__TRIOR__TrioAssignment_1)
{ after(grammarAccess.getTRIORAccess().getTrioAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArithBool__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithBool__Group__0__Impl
	rule__ArithBool__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithBool__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithBoolAccess().getArithTerm1Assignment_0()); }
(rule__ArithBool__ArithTerm1Assignment_0)
{ after(grammarAccess.getArithBoolAccess().getArithTerm1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithBool__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithBool__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithBool__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithBoolAccess().getGroup_1()); }
(rule__ArithBool__Group_1__0)?
{ after(grammarAccess.getArithBoolAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArithBool__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithBool__Group_1__0__Impl
	rule__ArithBool__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithBool__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithBoolAccess().getArithCOPAssignment_1_0()); }
(rule__ArithBool__ArithCOPAssignment_1_0)
{ after(grammarAccess.getArithBoolAccess().getArithCOPAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithBool__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithBool__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithBool__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithBoolAccess().getArithTerm2Assignment_1_1()); }
(rule__ArithBool__ArithTerm2Assignment_1_1)
{ after(grammarAccess.getArithBoolAccess().getArithTerm2Assignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArithTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithTerm__Group__0__Impl
	rule__ArithTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermAccess().getArithTermLAssignment_0()); }
(rule__ArithTerm__ArithTermLAssignment_0)
{ after(grammarAccess.getArithTermAccess().getArithTermLAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermAccess().getArithTermRAssignment_1()); }
(rule__ArithTerm__ArithTermRAssignment_1)?
{ after(grammarAccess.getArithTermAccess().getArithTermRAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArithTermL__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithTermL__Group_0__0__Impl
	rule__ArithTermL__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getArithTermLAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithTermL__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithTermL__Group_0__1__Impl
	rule__ArithTermL__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getTrioAssignment_0_1()); }
(rule__ArithTermL__TrioAssignment_0_1)
{ after(grammarAccess.getArithTermLAccess().getTrioAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithTermL__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithTermL__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getArithTermLAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArithTermL__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithTermL__Group_3__0__Impl
	rule__ArithTermL__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getFutrKeyword_3_0()); }

	'Futr(' 

{ after(grammarAccess.getArithTermLAccess().getFutrKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithTermL__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithTermL__Group_3__1__Impl
	rule__ArithTermL__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getArithTermFAssignment_3_1()); }
(rule__ArithTermL__ArithTermFAssignment_3_1)
{ after(grammarAccess.getArithTermLAccess().getArithTermFAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithTermL__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithTermL__Group_3__2__Impl
	rule__ArithTermL__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getCommaKeyword_3_2()); }

	',' 

{ after(grammarAccess.getArithTermLAccess().getCommaKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithTermL__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithTermL__Group_3__3__Impl
	rule__ArithTermL__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getIntFAssignment_3_3()); }
(rule__ArithTermL__IntFAssignment_3_3)
{ after(grammarAccess.getArithTermLAccess().getIntFAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithTermL__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithTermL__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getRightParenthesisKeyword_3_4()); }

	')' 

{ after(grammarAccess.getArithTermLAccess().getRightParenthesisKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ArithTermL__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithTermL__Group_4__0__Impl
	rule__ArithTermL__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getPastKeyword_4_0()); }

	'Past(' 

{ after(grammarAccess.getArithTermLAccess().getPastKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithTermL__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithTermL__Group_4__1__Impl
	rule__ArithTermL__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getArithTermPAssignment_4_1()); }
(rule__ArithTermL__ArithTermPAssignment_4_1)
{ after(grammarAccess.getArithTermLAccess().getArithTermPAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithTermL__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithTermL__Group_4__2__Impl
	rule__ArithTermL__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getCommaKeyword_4_2()); }

	',' 

{ after(grammarAccess.getArithTermLAccess().getCommaKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithTermL__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithTermL__Group_4__3__Impl
	rule__ArithTermL__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getIntPAssignment_4_3()); }
(rule__ArithTermL__IntPAssignment_4_3)
{ after(grammarAccess.getArithTermLAccess().getIntPAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithTermL__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithTermL__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getRightParenthesisKeyword_4_4()); }

	')' 

{ after(grammarAccess.getArithTermLAccess().getRightParenthesisKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ArithTermR__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithTermR__Group__0__Impl
	rule__ArithTermR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermR__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermRAccess().getArithOPAssignment_0()); }
(rule__ArithTermR__ArithOPAssignment_0)
{ after(grammarAccess.getArithTermRAccess().getArithOPAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithTermR__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithTermR__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermR__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermRAccess().getArithTermAssignment_1()); }
(rule__ArithTermR__ArithTermAssignment_1)
{ after(grammarAccess.getArithTermRAccess().getArithTermAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArithVar__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithVar__Group_0__0__Impl
	rule__ArithVar__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithVar__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithVarAccess().getObjAssignment_0_0()); }
(rule__ArithVar__ObjAssignment_0_0)
{ after(grammarAccess.getArithVarAccess().getObjAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithVar__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithVar__Group_0__1__Impl
	rule__ArithVar__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithVar__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithVarAccess().getFullStopKeyword_0_1()); }

	'.' 

{ after(grammarAccess.getArithVarAccess().getFullStopKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithVar__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithVar__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithVar__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithVarAccess().getAtrAssignment_0_2()); }
(rule__ArithVar__AtrAssignment_0_2)
{ after(grammarAccess.getArithVarAccess().getAtrAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArithVar__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithVar__Group_1__0__Impl
	rule__ArithVar__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithVar__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithVarAccess().getObjAssignment_1_0()); }
(rule__ArithVar__ObjAssignment_1_0)
{ after(grammarAccess.getArithVarAccess().getObjAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithVar__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithVar__Group_1__1__Impl
	rule__ArithVar__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithVar__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithVarAccess().getColonColonKeyword_1_1()); }

	'::' 

{ after(grammarAccess.getArithVarAccess().getColonColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithVar__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithVar__Group_1__2__Impl
	rule__ArithVar__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithVar__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithVarAccess().getOpAssignment_1_2()); }
(rule__ArithVar__OpAssignment_1_2)
{ after(grammarAccess.getArithVarAccess().getOpAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithVar__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithVar__Group_1__3__Impl
	rule__ArithVar__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithVar__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithVarAccess().getFullStopKeyword_1_3()); }

	'.' 

{ after(grammarAccess.getArithVarAccess().getFullStopKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithVar__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithVar__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithVar__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithVarAccess().getParamAssignment_1_4()); }
(rule__ArithVar__ParamAssignment_1_4)
{ after(grammarAccess.getArithVarAccess().getParamAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ArithVar__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithVar__Group_2__0__Impl
	rule__ArithVar__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithVar__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithVarAccess().getSdAssignment_2_0()); }
(rule__ArithVar__SdAssignment_2_0)
{ after(grammarAccess.getArithVarAccess().getSdAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithVar__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithVar__Group_2__1__Impl
	rule__ArithVar__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithVar__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithVarAccess().getGetParameterKeyword_2_1()); }

	'.getParameter(' 

{ after(grammarAccess.getArithVarAccess().getGetParameterKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithVar__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithVar__Group_2__2__Impl
	rule__ArithVar__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithVar__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithVarAccess().getParamAssignment_2_2()); }
(rule__ArithVar__ParamAssignment_2_2)
{ after(grammarAccess.getArithVarAccess().getParamAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArithVar__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArithVar__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithVar__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithVarAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getArithVarAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DataType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getIAssignment_0()); }
(rule__DataType__IAssignment_0)
{ after(grammarAccess.getDataTypeAccess().getIAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getFloatAssignment_1()); }
(rule__DataType__FloatAssignment_1)?
{ after(grammarAccess.getDataTypeAccess().getFloatAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__DeclarationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDeclarationsDeclarationParserRuleCall_0_0()); }
	ruleDeclaration{ after(grammarAccess.getModelAccess().getDeclarationsDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__CorrettoCommandAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getCorrettoCommandCorrettoParserRuleCall_1_0()); }
	ruleCorretto{ after(grammarAccess.getModelAccess().getCorrettoCommandCorrettoParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Corretto__VerifyAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCorrettoAccess().getVerifyVerifyParserRuleCall_1_0_0()); }
	ruleVerify{ after(grammarAccess.getCorrettoAccess().getVerifyVerifyParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Corretto__ExecuteAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCorrettoAccess().getExecuteEXECUTETerminalRuleCall_1_1_0()); }
	RULE_EXECUTE{ after(grammarAccess.getCorrettoAccess().getExecuteEXECUTETerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__TrioAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerifyAccess().getTrioTRIOParserRuleCall_1_0()); }
	ruleTRIO{ after(grammarAccess.getVerifyAccess().getTrioTRIOParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__StateNameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getStateNameIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getDeclarationAccess().getStateNameIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ObjAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getObjIDTerminalRuleCall_0_2_0()); }
	RULE_ID{ after(grammarAccess.getDeclarationAccess().getObjIDTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__StdAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getStdIDTerminalRuleCall_0_4_0()); }
	RULE_ID{ after(grammarAccess.getDeclarationAccess().getStdIDTerminalRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__UMLStateNameAssignment_0_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getUMLStateNameIDTerminalRuleCall_0_6_0()); }
	RULE_ID{ after(grammarAccess.getDeclarationAccess().getUMLStateNameIDTerminalRuleCall_0_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__TrioVarAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getTrioVarIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getDeclarationAccess().getTrioVarIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__TrioAssignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getTrioTRIOParserRuleCall_1_2_0_0()); }
	ruleTRIO{ after(grammarAccess.getDeclarationAccess().getTrioTRIOParserRuleCall_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ObjAssignment_1_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getObjIDTerminalRuleCall_1_2_1_0_0()); }
	RULE_ID{ after(grammarAccess.getDeclarationAccess().getObjIDTerminalRuleCall_1_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__StateNameAssignment_1_2_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getStateNameIDTerminalRuleCall_1_2_1_2_0()); }
	RULE_ID{ after(grammarAccess.getDeclarationAccess().getStateNameIDTerminalRuleCall_1_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TRIO__TrioLAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOAccess().getTrioLTRIOLParserRuleCall_0_0()); }
	ruleTRIOL{ after(grammarAccess.getTRIOAccess().getTrioLTRIOLParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TRIO__TrioRAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOAccess().getTrioRTRIORParserRuleCall_1_0()); }
	ruleTRIOR{ after(grammarAccess.getTRIOAccess().getTrioRTRIORParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__TrioVarAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTrioVarIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getTRIOLAccess().getTrioVarIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__OpNameAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getOpNameIDTerminalRuleCall_0_1_0_0()); }
	RULE_ID{ after(grammarAccess.getTRIOLAccess().getOpNameIDTerminalRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__ArithBoolAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getArithBoolArithBoolParserRuleCall_1_0()); }
	ruleArithBool{ after(grammarAccess.getTRIOLAccess().getArithBoolArithBoolParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__TrioNotAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTrioNotTRIOParserRuleCall_2_1_0()); }
	ruleTRIO{ after(grammarAccess.getTRIOLAccess().getTrioNotTRIOParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__TrioOpFAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTrioOpFTRIOOPFTerminalRuleCall_3_1_0()); }
	RULE_TRIOOPF{ after(grammarAccess.getTRIOLAccess().getTrioOpFTRIOOPFTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__TrioOpF1Assignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTrioOpF1TRIOParserRuleCall_3_3_0()); }
	ruleTRIO{ after(grammarAccess.getTRIOLAccess().getTrioOpF1TRIOParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__TrioOpFFAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTrioOpFFTRIOOPFFTerminalRuleCall_4_1_0()); }
	RULE_TRIOOPFF{ after(grammarAccess.getTRIOLAccess().getTrioOpFFTRIOOPFFTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__TrioOpFF1Assignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTrioOpFF1TRIOParserRuleCall_4_3_0()); }
	ruleTRIO{ after(grammarAccess.getTRIOLAccess().getTrioOpFF1TRIOParserRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__TrioOpFF2Assignment_4_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTrioOpFF2TRIOParserRuleCall_4_5_0()); }
	ruleTRIO{ after(grammarAccess.getTRIOLAccess().getTrioOpFF2TRIOParserRuleCall_4_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__TrioOpFNAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTrioOpFNTRIOOPFNTerminalRuleCall_5_1_0()); }
	RULE_TRIOOPFN{ after(grammarAccess.getTRIOLAccess().getTrioOpFNTRIOOPFNTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__TrioOpFN1Assignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getTrioOpFN1TRIOParserRuleCall_5_3_0()); }
	ruleTRIO{ after(grammarAccess.getTRIOLAccess().getTrioOpFN1TRIOParserRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOL__IntAssignment_5_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIOLAccess().getIntINTTerminalRuleCall_5_5_0()); }
	RULE_INT{ after(grammarAccess.getTRIOLAccess().getIntINTTerminalRuleCall_5_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOR__TrioOP2Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIORAccess().getTrioOP2TRIOOP2TerminalRuleCall_0_0()); }
	RULE_TRIOOP2{ after(grammarAccess.getTRIORAccess().getTrioOP2TRIOOP2TerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TRIOR__TrioAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTRIORAccess().getTrioTRIOParserRuleCall_1_0()); }
	ruleTRIO{ after(grammarAccess.getTRIORAccess().getTrioTRIOParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithBool__ArithTerm1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithBoolAccess().getArithTerm1ArithTermParserRuleCall_0_0()); }
	ruleArithTerm{ after(grammarAccess.getArithBoolAccess().getArithTerm1ArithTermParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithBool__ArithCOPAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithBoolAccess().getArithCOPARITH_COMPARE_OPTerminalRuleCall_1_0_0()); }
	RULE_ARITH_COMPARE_OP{ after(grammarAccess.getArithBoolAccess().getArithCOPARITH_COMPARE_OPTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithBool__ArithTerm2Assignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithBoolAccess().getArithTerm2ArithTermParserRuleCall_1_1_0()); }
	ruleArithTerm{ after(grammarAccess.getArithBoolAccess().getArithTerm2ArithTermParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTerm__ArithTermLAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermAccess().getArithTermLArithTermLParserRuleCall_0_0()); }
	ruleArithTermL{ after(grammarAccess.getArithTermAccess().getArithTermLArithTermLParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTerm__ArithTermRAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermAccess().getArithTermRArithTermRParserRuleCall_1_0()); }
	ruleArithTermR{ after(grammarAccess.getArithTermAccess().getArithTermRArithTermRParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__TrioAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getTrioTRIOParserRuleCall_0_1_0()); }
	ruleTRIO{ after(grammarAccess.getArithTermLAccess().getTrioTRIOParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__ConstantAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getConstantDataTypeParserRuleCall_1_0()); }
	ruleDataType{ after(grammarAccess.getArithTermLAccess().getConstantDataTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__ArithVarAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getArithVarArithVarParserRuleCall_2_0()); }
	ruleArithVar{ after(grammarAccess.getArithTermLAccess().getArithVarArithVarParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__ArithTermFAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getArithTermFArithTermParserRuleCall_3_1_0()); }
	ruleArithTerm{ after(grammarAccess.getArithTermLAccess().getArithTermFArithTermParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__IntFAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getIntFINTTerminalRuleCall_3_3_0()); }
	RULE_INT{ after(grammarAccess.getArithTermLAccess().getIntFINTTerminalRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__ArithTermPAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getArithTermPArithTermParserRuleCall_4_1_0()); }
	ruleArithTerm{ after(grammarAccess.getArithTermLAccess().getArithTermPArithTermParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermL__IntPAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermLAccess().getIntPINTTerminalRuleCall_4_3_0()); }
	RULE_INT{ after(grammarAccess.getArithTermLAccess().getIntPINTTerminalRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermR__ArithOPAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermRAccess().getArithOPARITH_OPTerminalRuleCall_0_0()); }
	RULE_ARITH_OP{ after(grammarAccess.getArithTermRAccess().getArithOPARITH_OPTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithTermR__ArithTermAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithTermRAccess().getArithTermArithTermParserRuleCall_1_0()); }
	ruleArithTerm{ after(grammarAccess.getArithTermRAccess().getArithTermArithTermParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithVar__ObjAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithVarAccess().getObjIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getArithVarAccess().getObjIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithVar__AtrAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithVarAccess().getAtrIDTerminalRuleCall_0_2_0()); }
	RULE_ID{ after(grammarAccess.getArithVarAccess().getAtrIDTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithVar__ObjAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithVarAccess().getObjIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getArithVarAccess().getObjIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithVar__OpAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithVarAccess().getOpIDTerminalRuleCall_1_2_0()); }
	RULE_ID{ after(grammarAccess.getArithVarAccess().getOpIDTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithVar__ParamAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithVarAccess().getParamIDTerminalRuleCall_1_4_0()); }
	RULE_ID{ after(grammarAccess.getArithVarAccess().getParamIDTerminalRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithVar__SdAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithVarAccess().getSdIDTerminalRuleCall_2_0_0()); }
	RULE_ID{ after(grammarAccess.getArithVarAccess().getSdIDTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithVar__ParamAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithVarAccess().getParamIDTerminalRuleCall_2_2_0()); }
	RULE_ID{ after(grammarAccess.getArithVarAccess().getParamIDTerminalRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__IAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getIINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getDataTypeAccess().getIINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__FloatAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getFloatFLOATTerminalRuleCall_1_0()); }
	RULE_FLOAT{ after(grammarAccess.getDataTypeAccess().getFloatFLOATTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_EXECUTE : 'execute()';

RULE_TRIOOP2 : ('&&'|'||'|'=>'|'<=>'|'->'|'<->');

RULE_TRIOOPF : ('alw'|'always'|'alwaysTrue'|'neverFalse'|'som'|'atLeastOnce'|'alwF'|'alwaysWillBe'|'somF'|'eventually'|'eventuallyWillBe'|'alwP'|'historically'|'alwaysHasBeen'|'somP'|'alwaysFalse'|'neverTrue');

RULE_TRIOOPFF : ('until'|'since'|'release'|'trigger');

RULE_TRIOOPFN : ('futr'|'past'|'withinF'|'withinP'|'lasts'|'lasted');

RULE_FLOAT : '.' ('0'..'9')+;

RULE_ARITH_OP : ('+'|'-'|'*'|'/');

RULE_ARITH_COMPARE_OP : ('>'|'>='|'<'|'<='|'=='|'!=');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


